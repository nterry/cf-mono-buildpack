#!/usr/bin/env ruby

#sync output
$stdout.sync = true

@build_path = ARGV[0]
@cache_path = ARGV[1]


def fetch_mono
  puts 'Fetching mono from S3...'
  `mkdir -p #{@cache_path}/vendor/mono; curl https://s3.amazonaws.com/mono-bin/mono3/mono-3.0.10.tgz -o #{@cache_path}/vendor/mono/mono-3.0.10.tgz`
  $?.success?
end

def unpack_mono
  puts 'Unpacking mono into vendor cache...'
  console_output = `mkdir -p #{@cache_path}/vendor/mono; cd #{@cache_path}/vendor/mono; tar -zxvf mono-3.0.10.tgz; rm -f mono-3.0.10.tgz; cd -`
  puts console_output
  $?.success?
end

def correct_prefix
  puts "Correcting the build prefix from /usr/share to #{@build_path}/vendor/mono/"
  Dir.glob("#{@cache_path}/vendor/mono/**/*", File::FNM_DOTMATCH) do |f|
    begin
      file = File.stat(f)
      next unless file.file?
      prev_text = File.read(f)
      new_text = prev_text.gsub("/usr/share", "#{@build_path}/vendor/mono/")
      puts "FIX: #{File.path(f)}" if !(prev_text === new_text)
      File.open(f, "w") { |file| file.puts new_text } if !(prev_text === new_text)
    rescue
      next
    end
  end

  return true
end

def prepare_mono
  puts "Moving cached mono at #{@cache_path}/vendor/mono to vendor build at #{@build_path}/vendor/mono"
  console_output = `mkdir -p #{@build_path}/vendor; mv #{@cache_path}/vendor/mono #{@build_path}/vendor/`
  puts console_output
  $?.success?
end

def compile
  puts 'Compiling application'
  console_output = `cd #{@build_path}; #{@build_path}/vendor/mono/bin/xbuild`
  puts console_output
  $?.success?
end


if fetch_mono
  if unpack_mono
    if correct_prefix
      if prepare_mono
        if compile
          puts 'Successfully compied application. Preparing for deployment...'
          exit 0
        else
          puts 'Failed to compile application...'
          exit 1
        end
      else
        puts 'Failed to prepare mono...'
        exit 1
      end
    else
      puts 'Failed to correct the build prefix...'
      exit 1
    end
  else
    puts 'Failed to unpack mono...'
    exit 1
  end
else
  puts 'Failed to fetch mono...'
  exit 1
end
